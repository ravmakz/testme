name: Comment on the pull request

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: ["Receive Pull Request"]
    types:
      - completed

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Print github context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

  upload:
    name: "Upload PR changes to branch"
    runs-on: ubuntu-latest
    if: >
      ${{ github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: 'Checkout md outputs'
        uses: actions/checkout@v2.3.4
        with:
          ref: md-outputs
          path: built
          fetch-depth: 1
      - name: 'Download pr number and diff'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "diff"
            })[0];
            if (typeof matchArtifact === 'undefined') {
              throw "no diff produced"
            }
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/diff.zip', Buffer.from(download.data));
      - run: unzip diff.zip
      - name: Check PR status
        id: pr-status
        run: |
          NR=$(cat ./NR)
          URI="https://api.github.com/repos/${{ github.repository }}/pulls/${NR}"
          echo ${URI}
          MERGED=$(curl -sIH "Accept:application/vnd.github.v3+json" "${URI}/merge" | grep -c 'status: 404')
          echo "MERGED STATUS: ${MERGED}"
          # FILES=$(curl -H "Accept:application/vnd.github.v3+json" "${URI}/files" | grep -c "\"filename\": \".github/")
          FILES=0
          echo ".github files: ${FILES}"
          if [ ${FILES} -ne 0 ] || [ ${MERGED} -ne 1 ]; then
            valid=false
          else
            valid=true
          fi
          echo ${valid}
          echo "::set-output name=VALID::${valid}"
          exit 0
          
      - name: 'Download built'
        if: ${{ steps.pr-status.outputs.VALID }}
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "built"
            })[0];
            if (typeof matchArtifact === 'undefined') {
              throw "no markdown built"
            }
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/built.zip', Buffer.from(download.data));
      - name: "Create orphan and push"
        if: ${{ steps.pr-status.outputs.VALID }}
        run: |
          NR=$(cat ./NR)
          cd built/
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          CURR_HEAD=$(git rev-parse HEAD)
          git checkout --orphan md-outputs-PR-${NR}
          git add -A 
          git commit -m "source commit: ${CURR_HEAD}"
          cd ..
          ls -d -A built/* | grep -v '.git' | xargs rm -r
          unzip -d built built.zip
          cd built
          git add -A
          git commit --allow-empty -m "differences for PR #${NR}"
          git push -u --force --set-upstream origin md-outputs-PR-${NR}

      - name: 'Comment on PR'
        if: ${{ steps.pr-status.outputs.VALID }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var fs = require('fs');
            var issue_number = Number(fs.readFileSync('./NR'));
            var body = String(fs.readFileSync('./diff.md', {encoding:'utf8', flag:'r'}));
            var id = await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: body 
            });
            console.log(id)
